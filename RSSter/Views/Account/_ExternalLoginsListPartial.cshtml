@model Models.Models.ExternalLoginListViewModel
@using Microsoft.Owin.Security

@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0)
    {
        <div>
            <p>
                There are no external authentication services configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                for details on setting up this ASP.NET application to support logging in via external services.
            </p>
        </div>
    }
    else
    {
        using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = Model.ReturnUrl }))
        {
            @Html.AntiForgeryToken()
            <div id="socialLoginList">
                <p>
                    @foreach (AuthenticationDescription p in loginProviders)
                    {
                        <button type="submit" class="fluid ui google plus massive button" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account"><i class="google plus icon"></i><b>Google Plus</b></button>
                        <br />
                        <button type="submit" class="fluid ui gray massive button" id="@p.AuthenticationType" disabled="true" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account"><i class="facebook icon"></i><b>Facebook</b></button>
                        <br />
                        <button type="submit" class="fluid ui gray massive button" id="@p.AuthenticationType" disabled="true" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account"><i class="twitter icon"></i><b>Twitter</b></button>

                        @*<button type="submit" class="btn btn-default" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">@p.AuthenticationType</button>*@

                    }
                </p>
            </div>
        }
    }
}
